// Package main is originally generated by trpc-cmdline v1.0.6.
// It is located at `project/cmd/client`.
// Run this file by executing `go run cmd/client/main.go` in the project directory.
package main

import (
	pb "trpc.bazi.paipan"
	_ "trpc.group/trpc-go/trpc-filter/debuglog"
	_ "trpc.group/trpc-go/trpc-filter/validation"
	trpc "trpc.group/trpc-go/trpc-go"
	"trpc.group/trpc-go/trpc-go/log"
)

func callBaziPaipanCreateBaziPaipan() {
	proxy := pb.NewBaziPaipanClientProxy()
	ctx := trpc.BackgroundContext()
	// Example usage of unary client.
	req := pb.PaiPanRequest{
		Year:         1984,
		Month:        3,
		Day:          9,
		Hour:         7,
		Minute:       37,
		Name:         "xxx",
		Gender:       false,                                     //性别
		AstFlag:      false,                                     //是否真太阳时
		IsLeapMonth:  false,                                     //只有农历才有用
		IsSpeLunar:   false,                                     //农历特殊月序才用
		Longitude:    120,                                       //经度
		Calendar:     int32(pb.Calendar_Calendar_YouZiPingDong), //历法
		CalendarType: int32(pb.CalendarType_CalendarType_Gregorian),
	}
	reply, err := proxy.CreateBaziPaipan(ctx, &req)
	if err != nil {
		log.FatalContextf(ctx, "err: %v", err)
	}
	log.DebugContextf(ctx, "simple  rpc   receive: %+v", reply)
}

func callBaziPaipanRenderPaiPanImage() {
	proxy := pb.NewBaziPaipanClientProxy()
	ctx := trpc.BackgroundContext()
	// Example usage of unary client.
	reply, err := proxy.RenderPaiPanImage(ctx, &pb.PaiPanRequest{})
	if err != nil {
		log.FatalContextf(ctx, "err: %v", err)
	}
	log.DebugContextf(ctx, "simple  rpc   receive: %+v", reply)
}

func main() {
	// Load configuration following the logic in trpc.NewServer.
	trpc.ServerConfigPath = "./config/trpc_go.yaml"
	cfg, err := trpc.LoadConfig(trpc.ServerConfigPath)
	if err != nil {
		panic("load config fail: " + err.Error())
	}
	trpc.SetGlobalConfig(cfg)
	if err := trpc.Setup(cfg); err != nil {
		panic("setup plugin fail: " + err.Error())
	}
	callBaziPaipanCreateBaziPaipan()
	//callBaziPaipanRenderPaiPanImage()
}
