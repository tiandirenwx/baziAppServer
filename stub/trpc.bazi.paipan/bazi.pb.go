// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: proto/bazi.proto

// package内容格式推荐为trpc.{app}.{server}，以trpc为固定前缀，标识这是一个trpc服务协议，app为你的应用名，server为你的服务进程名

package trpc_bazi_paipan

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// {"太初历", "四分历", "大明历", "戊寅元历", "麟德历", "正元历", "应天历", "崇天历", "淳祐历", "授时历"}
type Calendar int32

const (
	Calendar_Calendar_Unknown       Calendar = 0  //未知历法
	Calendar_Calendar_TaiChu        Calendar = 1  //太初历
	Calendar_Calendar_ShiFen        Calendar = 2  //四分历
	Calendar_Calendar_DaMing        Calendar = 3  //祖冲之大明历
	Calendar_Calendar_WuYinYuan     Calendar = 4  //戊寅元历
	Calendar_Calendar_LinDe         Calendar = 5  //麟德历
	Calendar_Calendar_ZhengYuan     Calendar = 6  //正元历
	Calendar_Calendar_YingTian      Calendar = 7  //应天历
	Calendar_Calendar_ChongTian     Calendar = 8  //崇天历
	Calendar_Calendar_ChunYou       Calendar = 9  //淳祐历
	Calendar_Calendar_ShouShi       Calendar = 10 //郭守敬授时历
	Calendar_Calendar_YouZiPingDong Calendar = 11 //尤武伟子平历-定冬至
	Calendar_Calendar_YouZiPingXia  Calendar = 12 //尤武伟子平历-定夏至
	Calendar_Calendar_LunarDingQi   Calendar = 13 //现代农历-定气法
)

// Enum value maps for Calendar.
var (
	Calendar_name = map[int32]string{
		0:  "Calendar_Unknown",
		1:  "Calendar_TaiChu",
		2:  "Calendar_ShiFen",
		3:  "Calendar_DaMing",
		4:  "Calendar_WuYinYuan",
		5:  "Calendar_LinDe",
		6:  "Calendar_ZhengYuan",
		7:  "Calendar_YingTian",
		8:  "Calendar_ChongTian",
		9:  "Calendar_ChunYou",
		10: "Calendar_ShouShi",
		11: "Calendar_YouZiPingDong",
		12: "Calendar_YouZiPingXia",
		13: "Calendar_LunarDingQi",
	}
	Calendar_value = map[string]int32{
		"Calendar_Unknown":       0,
		"Calendar_TaiChu":        1,
		"Calendar_ShiFen":        2,
		"Calendar_DaMing":        3,
		"Calendar_WuYinYuan":     4,
		"Calendar_LinDe":         5,
		"Calendar_ZhengYuan":     6,
		"Calendar_YingTian":      7,
		"Calendar_ChongTian":     8,
		"Calendar_ChunYou":       9,
		"Calendar_ShouShi":       10,
		"Calendar_YouZiPingDong": 11,
		"Calendar_YouZiPingXia":  12,
		"Calendar_LunarDingQi":   13,
	}
)

func (x Calendar) Enum() *Calendar {
	p := new(Calendar)
	*p = x
	return p
}

func (x Calendar) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Calendar) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_bazi_proto_enumTypes[0].Descriptor()
}

func (Calendar) Type() protoreflect.EnumType {
	return &file_proto_bazi_proto_enumTypes[0]
}

func (x Calendar) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Calendar.Descriptor instead.
func (Calendar) EnumDescriptor() ([]byte, []int) {
	return file_proto_bazi_proto_rawDescGZIP(), []int{0}
}

type CalendarType int32

const (
	CalendarType_CalendarType_Unknown   CalendarType = 0
	CalendarType_CalendarType_Gregorian CalendarType = 1 //公历
	CalendarType_CalendarType_Lunar     CalendarType = 2 //农历
	CalendarType_CalendarType_Julian    CalendarType = 3 //儒略历
	CalendarType_CalendarType_Hejra     CalendarType = 4 //回历
)

// Enum value maps for CalendarType.
var (
	CalendarType_name = map[int32]string{
		0: "CalendarType_Unknown",
		1: "CalendarType_Gregorian",
		2: "CalendarType_Lunar",
		3: "CalendarType_Julian",
		4: "CalendarType_Hejra",
	}
	CalendarType_value = map[string]int32{
		"CalendarType_Unknown":   0,
		"CalendarType_Gregorian": 1,
		"CalendarType_Lunar":     2,
		"CalendarType_Julian":    3,
		"CalendarType_Hejra":     4,
	}
)

func (x CalendarType) Enum() *CalendarType {
	p := new(CalendarType)
	*p = x
	return p
}

func (x CalendarType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalendarType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_bazi_proto_enumTypes[1].Descriptor()
}

func (CalendarType) Type() protoreflect.EnumType {
	return &file_proto_bazi_proto_enumTypes[1]
}

func (x CalendarType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalendarType.Descriptor instead.
func (CalendarType) EnumDescriptor() ([]byte, []int) {
	return file_proto_bazi_proto_rawDescGZIP(), []int{1}
}

// 请求参数
// --birthday(生日),sex(性别),AST(太阳时 apparent solar time)
// --lon(出生地经度：longitude),lifa(历法 calendar )
type PaiPanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year         int32   `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month        int32   `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day          int32   `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	Hour         int32   `protobuf:"varint,4,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute       int32   `protobuf:"varint,5,opt,name=minute,proto3" json:"minute,omitempty"`
	Name         string  `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                   //姓名
	Gender       bool    `protobuf:"varint,7,opt,name=gender,proto3" json:"gender,omitempty"`              //性别
	AstFlag      bool    `protobuf:"varint,8,opt,name=astFlag,proto3" json:"astFlag,omitempty"`            //是否真太阳时
	IsLeapMonth  bool    `protobuf:"varint,9,opt,name=isLeapMonth,proto3" json:"isLeapMonth,omitempty"`    //只有农历才有用
	IsSpeLunar   bool    `protobuf:"varint,10,opt,name=isSpeLunar,proto3" json:"isSpeLunar,omitempty"`     //农历特殊月序才用
	Longitude    float32 `protobuf:"fixed32,11,opt,name=longitude,proto3" json:"longitude,omitempty"`      //经度
	Calendar     int32   `protobuf:"varint,12,opt,name=calendar,proto3" json:"calendar,omitempty"`         //历法
	CalendarType int32   `protobuf:"varint,13,opt,name=calendarType,proto3" json:"calendarType,omitempty"` //历法类型
}

func (x *PaiPanRequest) Reset() {
	*x = PaiPanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bazi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaiPanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaiPanRequest) ProtoMessage() {}

func (x *PaiPanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bazi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaiPanRequest.ProtoReflect.Descriptor instead.
func (*PaiPanRequest) Descriptor() ([]byte, []int) {
	return file_proto_bazi_proto_rawDescGZIP(), []int{0}
}

func (x *PaiPanRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *PaiPanRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *PaiPanRequest) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *PaiPanRequest) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *PaiPanRequest) GetMinute() int32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *PaiPanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaiPanRequest) GetGender() bool {
	if x != nil {
		return x.Gender
	}
	return false
}

func (x *PaiPanRequest) GetAstFlag() bool {
	if x != nil {
		return x.AstFlag
	}
	return false
}

func (x *PaiPanRequest) GetIsLeapMonth() bool {
	if x != nil {
		return x.IsLeapMonth
	}
	return false
}

func (x *PaiPanRequest) GetIsSpeLunar() bool {
	if x != nil {
		return x.IsSpeLunar
	}
	return false
}

func (x *PaiPanRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *PaiPanRequest) GetCalendar() int32 {
	if x != nil {
		return x.Calendar
	}
	return 0
}

func (x *PaiPanRequest) GetCalendarType() int32 {
	if x != nil {
		return x.CalendarType
	}
	return 0
}

type BaziSiZhu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shishen  []string `protobuf:"bytes,1,rep,name=shishen,proto3" json:"shishen,omitempty"`
	Tiangan  []string `protobuf:"bytes,2,rep,name=tiangan,proto3" json:"tiangan,omitempty"`
	Dizhi    []string `protobuf:"bytes,3,rep,name=dizhi,proto3" json:"dizhi,omitempty"`
	Canggan1 []string `protobuf:"bytes,4,rep,name=canggan1,proto3" json:"canggan1,omitempty"`
	Canggan2 []string `protobuf:"bytes,5,rep,name=canggan2,proto3" json:"canggan2,omitempty"`
	Canggan3 []string `protobuf:"bytes,6,rep,name=canggan3,proto3" json:"canggan3,omitempty"`
}

func (x *BaziSiZhu) Reset() {
	*x = BaziSiZhu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bazi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaziSiZhu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaziSiZhu) ProtoMessage() {}

func (x *BaziSiZhu) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bazi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaziSiZhu.ProtoReflect.Descriptor instead.
func (*BaziSiZhu) Descriptor() ([]byte, []int) {
	return file_proto_bazi_proto_rawDescGZIP(), []int{1}
}

func (x *BaziSiZhu) GetShishen() []string {
	if x != nil {
		return x.Shishen
	}
	return nil
}

func (x *BaziSiZhu) GetTiangan() []string {
	if x != nil {
		return x.Tiangan
	}
	return nil
}

func (x *BaziSiZhu) GetDizhi() []string {
	if x != nil {
		return x.Dizhi
	}
	return nil
}

func (x *BaziSiZhu) GetCanggan1() []string {
	if x != nil {
		return x.Canggan1
	}
	return nil
}

func (x *BaziSiZhu) GetCanggan2() []string {
	if x != nil {
		return x.Canggan2
	}
	return nil
}

func (x *BaziSiZhu) GetCanggan3() []string {
	if x != nil {
		return x.Canggan3
	}
	return nil
}

// 响应参数
type CreatePaiPanRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce        string     `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`                  //标记
	Timestamp    string     `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`          //时间戳
	UserName     string     `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`            //姓名
	Gender       string     `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`                //性别
	Shengxiao    string     `protobuf:"bytes,5,opt,name=shengxiao,proto3" json:"shengxiao,omitempty"`          //生肖
	Age          string     `protobuf:"bytes,6,opt,name=age,proto3" json:"age,omitempty"`                      //年龄
	SolarBirth   string     `protobuf:"bytes,7,opt,name=solarBirth,proto3" json:"solarBirth,omitempty"`        //公历生日或儒略历生日
	LunarBirth   string     `protobuf:"bytes,8,opt,name=lunarBirth,proto3" json:"lunarBirth,omitempty"`        //农历生日
	DateOfBirth  string     `protobuf:"bytes,9,opt,name=dateOfBirth,proto3" json:"dateOfBirth,omitempty"`      //出生年代
	DingQiType   string     `protobuf:"bytes,10,opt,name=dingQiType,proto3" json:"dingQiType,omitempty"`       //定气方式
	JieQi        string     `protobuf:"bytes,11,opt,name=jieQi,proto3" json:"jieQi,omitempty"`                 //节气
	Bazi         *BaziSiZhu `protobuf:"bytes,12,opt,name=bazi,proto3" json:"bazi,omitempty"`                   //八字盘面信息
	QiYun        string     `protobuf:"bytes,13,opt,name=qiYun,proto3" json:"qiYun,omitempty"`                 //起运
	JiaoYun      string     `protobuf:"bytes,14,opt,name=jiaoYun,proto3" json:"jiaoYun,omitempty"`             //交运
	DaYun        []string   `protobuf:"bytes,15,rep,name=daYun,proto3" json:"daYun,omitempty"`                 //大运
	StartYear    []int32    `protobuf:"varint,16,rep,packed,name=startYear,proto3" json:"startYear,omitempty"` //起于
	FleetingYear []string   `protobuf:"bytes,17,rep,name=fleetingYear,proto3" json:"fleetingYear,omitempty"`   //流年
	EndYear      []int32    `protobuf:"varint,18,rep,packed,name=endYear,proto3" json:"endYear,omitempty"`     //止于
}

func (x *CreatePaiPanRsp) Reset() {
	*x = CreatePaiPanRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bazi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaiPanRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaiPanRsp) ProtoMessage() {}

func (x *CreatePaiPanRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bazi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaiPanRsp.ProtoReflect.Descriptor instead.
func (*CreatePaiPanRsp) Descriptor() ([]byte, []int) {
	return file_proto_bazi_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePaiPanRsp) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *CreatePaiPanRsp) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *CreatePaiPanRsp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreatePaiPanRsp) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CreatePaiPanRsp) GetShengxiao() string {
	if x != nil {
		return x.Shengxiao
	}
	return ""
}

func (x *CreatePaiPanRsp) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *CreatePaiPanRsp) GetSolarBirth() string {
	if x != nil {
		return x.SolarBirth
	}
	return ""
}

func (x *CreatePaiPanRsp) GetLunarBirth() string {
	if x != nil {
		return x.LunarBirth
	}
	return ""
}

func (x *CreatePaiPanRsp) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *CreatePaiPanRsp) GetDingQiType() string {
	if x != nil {
		return x.DingQiType
	}
	return ""
}

func (x *CreatePaiPanRsp) GetJieQi() string {
	if x != nil {
		return x.JieQi
	}
	return ""
}

func (x *CreatePaiPanRsp) GetBazi() *BaziSiZhu {
	if x != nil {
		return x.Bazi
	}
	return nil
}

func (x *CreatePaiPanRsp) GetQiYun() string {
	if x != nil {
		return x.QiYun
	}
	return ""
}

func (x *CreatePaiPanRsp) GetJiaoYun() string {
	if x != nil {
		return x.JiaoYun
	}
	return ""
}

func (x *CreatePaiPanRsp) GetDaYun() []string {
	if x != nil {
		return x.DaYun
	}
	return nil
}

func (x *CreatePaiPanRsp) GetStartYear() []int32 {
	if x != nil {
		return x.StartYear
	}
	return nil
}

func (x *CreatePaiPanRsp) GetFleetingYear() []string {
	if x != nil {
		return x.FleetingYear
	}
	return nil
}

func (x *CreatePaiPanRsp) GetEndYear() []int32 {
	if x != nil {
		return x.EndYear
	}
	return nil
}

type RenderPaiPanImageRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *RenderPaiPanImageRsp) Reset() {
	*x = RenderPaiPanImageRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bazi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderPaiPanImageRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderPaiPanImageRsp) ProtoMessage() {}

func (x *RenderPaiPanImageRsp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bazi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderPaiPanImageRsp.ProtoReflect.Descriptor instead.
func (*RenderPaiPanImageRsp) Descriptor() ([]byte, []int) {
	return file_proto_bazi_proto_rawDescGZIP(), []int{3}
}

func (x *RenderPaiPanImageRsp) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

var File_proto_bazi_proto protoreflect.FileDescriptor

var file_proto_bazi_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x61, 0x7a, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x2e, 0x70, 0x61,
	0x69, 0x70, 0x61, 0x6e, 0x22, 0xdd, 0x02, 0x0a, 0x0d, 0x50, 0x61, 0x69, 0x50, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64,
	0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73,
	0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x73, 0x74,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x70, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4c, 0x65, 0x61,
	0x70, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x53, 0x70, 0x65, 0x4c,
	0x75, 0x6e, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x70,
	0x65, 0x4c, 0x75, 0x6e, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x7a, 0x69, 0x53, 0x69, 0x5a,
	0x68, 0x75, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x73, 0x68, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x69, 0x73, 0x68, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x69, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x7a, 0x68, 0x69, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x69, 0x7a, 0x68, 0x69, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6e, 0x31, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6e, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6e, 0x32, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6e, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6e, 0x33,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6e, 0x33,
	0x22, 0x94, 0x04, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x69, 0x50, 0x61,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x68, 0x65, 0x6e, 0x67, 0x78, 0x69, 0x61, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x68, 0x65, 0x6e, 0x67, 0x78, 0x69, 0x61, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x6f, 0x6c, 0x61, 0x72, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x6c, 0x75, 0x6e, 0x61, 0x72, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x75, 0x6e, 0x61, 0x72, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x69, 0x6e, 0x67, 0x51, 0x69, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x6e, 0x67, 0x51, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6a, 0x69, 0x65, 0x51, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x69, 0x65, 0x51, 0x69, 0x12, 0x2f, 0x0a, 0x04, 0x62, 0x61, 0x7a, 0x69, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x2e, 0x70,
	0x61, 0x69, 0x70, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x7a, 0x69, 0x53, 0x69, 0x5a, 0x68, 0x75, 0x52,
	0x04, 0x62, 0x61, 0x7a, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x69, 0x59, 0x75, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x69, 0x59, 0x75, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6a,
	0x69, 0x61, 0x6f, 0x59, 0x75, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x69,
	0x61, 0x6f, 0x59, 0x75, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x59, 0x75, 0x6e, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x59, 0x75, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x18, 0x10, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x59, 0x65, 0x61, 0x72, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x59, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x18, 0x12, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x22, 0x2c, 0x0a, 0x14, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x69, 0x50, 0x61, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x2a, 0xcf, 0x02, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x61, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x5f, 0x54, 0x61, 0x69, 0x43, 0x68, 0x75, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x53, 0x68, 0x69, 0x46, 0x65, 0x6e,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x44,
	0x61, 0x4d, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x5f, 0x57, 0x75, 0x59, 0x69, 0x6e, 0x59, 0x75, 0x61, 0x6e, 0x10, 0x04, 0x12,
	0x12, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x4c, 0x69, 0x6e, 0x44,
	0x65, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f,
	0x5a, 0x68, 0x65, 0x6e, 0x67, 0x59, 0x75, 0x61, 0x6e, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x43,
	0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x59, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x61, 0x6e,
	0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x43,
	0x68, 0x6f, 0x6e, 0x67, 0x54, 0x69, 0x61, 0x6e, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x43, 0x68, 0x75, 0x6e, 0x59, 0x6f, 0x75, 0x10, 0x09,
	0x12, 0x14, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x53, 0x68, 0x6f,
	0x75, 0x53, 0x68, 0x69, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x61, 0x72, 0x5f, 0x59, 0x6f, 0x75, 0x5a, 0x69, 0x50, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x6e, 0x67,
	0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x59,
	0x6f, 0x75, 0x5a, 0x69, 0x50, 0x69, 0x6e, 0x67, 0x58, 0x69, 0x61, 0x10, 0x0c, 0x12, 0x18, 0x0a,
	0x14, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x4c, 0x75, 0x6e, 0x61, 0x72, 0x44,
	0x69, 0x6e, 0x67, 0x51, 0x69, 0x10, 0x0d, 0x2a, 0x8d, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x47, 0x72, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x61, 0x6e, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c,
	0x75, 0x6e, 0x61, 0x72, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4a, 0x75, 0x6c, 0x69, 0x61, 0x6e, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x48, 0x65, 0x6a, 0x72, 0x61, 0x10, 0x04, 0x32, 0xc6, 0x01, 0x0a, 0x0a, 0x42, 0x61, 0x7a, 0x69,
	0x50, 0x61, 0x69, 0x70, 0x61, 0x6e, 0x12, 0x58, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x7a, 0x69, 0x50, 0x61, 0x69, 0x70, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x70,
	0x63, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x2e, 0x70, 0x61, 0x69, 0x70, 0x61, 0x6e, 0x2e, 0x50, 0x61,
	0x69, 0x50, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x72,
	0x70, 0x63, 0x2e, 0x62, 0x61, 0x7a, 0x69, 0x2e, 0x70, 0x61, 0x69, 0x70, 0x61, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x69, 0x50, 0x61, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x5e, 0x0a, 0x11, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x50, 0x61, 0x6e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x61, 0x7a,
	0x69, 0x2e, 0x70, 0x61, 0x69, 0x70, 0x61, 0x6e, 0x2e, 0x50, 0x61, 0x69, 0x50, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x61,
	0x7a, 0x69, 0x2e, 0x70, 0x61, 0x69, 0x70, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x69, 0x50, 0x61, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_bazi_proto_rawDescOnce sync.Once
	file_proto_bazi_proto_rawDescData = file_proto_bazi_proto_rawDesc
)

func file_proto_bazi_proto_rawDescGZIP() []byte {
	file_proto_bazi_proto_rawDescOnce.Do(func() {
		file_proto_bazi_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_bazi_proto_rawDescData)
	})
	return file_proto_bazi_proto_rawDescData
}

var file_proto_bazi_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_bazi_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_bazi_proto_goTypes = []interface{}{
	(Calendar)(0),                // 0: trpc.bazi.paipan.Calendar
	(CalendarType)(0),            // 1: trpc.bazi.paipan.CalendarType
	(*PaiPanRequest)(nil),        // 2: trpc.bazi.paipan.PaiPanRequest
	(*BaziSiZhu)(nil),            // 3: trpc.bazi.paipan.BaziSiZhu
	(*CreatePaiPanRsp)(nil),      // 4: trpc.bazi.paipan.CreatePaiPanRsp
	(*RenderPaiPanImageRsp)(nil), // 5: trpc.bazi.paipan.RenderPaiPanImageRsp
}
var file_proto_bazi_proto_depIdxs = []int32{
	3, // 0: trpc.bazi.paipan.CreatePaiPanRsp.bazi:type_name -> trpc.bazi.paipan.BaziSiZhu
	2, // 1: trpc.bazi.paipan.BaziPaipan.CreateBaziPaipan:input_type -> trpc.bazi.paipan.PaiPanRequest
	2, // 2: trpc.bazi.paipan.BaziPaipan.RenderPaiPanImage:input_type -> trpc.bazi.paipan.PaiPanRequest
	4, // 3: trpc.bazi.paipan.BaziPaipan.CreateBaziPaipan:output_type -> trpc.bazi.paipan.CreatePaiPanRsp
	5, // 4: trpc.bazi.paipan.BaziPaipan.RenderPaiPanImage:output_type -> trpc.bazi.paipan.RenderPaiPanImageRsp
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_bazi_proto_init() }
func file_proto_bazi_proto_init() {
	if File_proto_bazi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_bazi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaiPanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bazi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaziSiZhu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bazi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaiPanRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bazi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderPaiPanImageRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_bazi_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_bazi_proto_goTypes,
		DependencyIndexes: file_proto_bazi_proto_depIdxs,
		EnumInfos:         file_proto_bazi_proto_enumTypes,
		MessageInfos:      file_proto_bazi_proto_msgTypes,
	}.Build()
	File_proto_bazi_proto = out.File
	file_proto_bazi_proto_rawDesc = nil
	file_proto_bazi_proto_goTypes = nil
	file_proto_bazi_proto_depIdxs = nil
}
