// Code generated by MockGen. DO NOT EDIT.
// Source: stub/trpc.bazi.paipan/bazi.trpc.go

// Package trpc_bazi_paipan is a generated GoMock package.
package trpc_bazi_paipan

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	client "trpc.group/trpc-go/trpc-go/client"
)

// MockBaziPaipanService is a mock of BaziPaipanService interface.
type MockBaziPaipanService struct {
	ctrl     *gomock.Controller
	recorder *MockBaziPaipanServiceMockRecorder
}

// MockBaziPaipanServiceMockRecorder is the mock recorder for MockBaziPaipanService.
type MockBaziPaipanServiceMockRecorder struct {
	mock *MockBaziPaipanService
}

// NewMockBaziPaipanService creates a new mock instance.
func NewMockBaziPaipanService(ctrl *gomock.Controller) *MockBaziPaipanService {
	mock := &MockBaziPaipanService{ctrl: ctrl}
	mock.recorder = &MockBaziPaipanServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBaziPaipanService) EXPECT() *MockBaziPaipanServiceMockRecorder {
	return m.recorder
}

// CreateBaziPaipan mocks base method.
func (m *MockBaziPaipanService) CreateBaziPaipan(ctx context.Context, req *PaiPanRequest) (*CreatePaiPanRsp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBaziPaipan", ctx, req)
	ret0, _ := ret[0].(*CreatePaiPanRsp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBaziPaipan indicates an expected call of CreateBaziPaipan.
func (mr *MockBaziPaipanServiceMockRecorder) CreateBaziPaipan(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBaziPaipan", reflect.TypeOf((*MockBaziPaipanService)(nil).CreateBaziPaipan), ctx, req)
}

// RenderPaiPanImage mocks base method.
func (m *MockBaziPaipanService) RenderPaiPanImage(ctx context.Context, req *PaiPanRequest) (*RenderPaiPanImageRsp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RenderPaiPanImage", ctx, req)
	ret0, _ := ret[0].(*RenderPaiPanImageRsp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RenderPaiPanImage indicates an expected call of RenderPaiPanImage.
func (mr *MockBaziPaipanServiceMockRecorder) RenderPaiPanImage(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RenderPaiPanImage", reflect.TypeOf((*MockBaziPaipanService)(nil).RenderPaiPanImage), ctx, req)
}

// MockBaziPaipanClientProxy is a mock of BaziPaipanClientProxy interface.
type MockBaziPaipanClientProxy struct {
	ctrl     *gomock.Controller
	recorder *MockBaziPaipanClientProxyMockRecorder
}

// MockBaziPaipanClientProxyMockRecorder is the mock recorder for MockBaziPaipanClientProxy.
type MockBaziPaipanClientProxyMockRecorder struct {
	mock *MockBaziPaipanClientProxy
}

// NewMockBaziPaipanClientProxy creates a new mock instance.
func NewMockBaziPaipanClientProxy(ctrl *gomock.Controller) *MockBaziPaipanClientProxy {
	mock := &MockBaziPaipanClientProxy{ctrl: ctrl}
	mock.recorder = &MockBaziPaipanClientProxyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBaziPaipanClientProxy) EXPECT() *MockBaziPaipanClientProxyMockRecorder {
	return m.recorder
}

// CreateBaziPaipan mocks base method.
func (m *MockBaziPaipanClientProxy) CreateBaziPaipan(ctx context.Context, req *PaiPanRequest, opts ...client.Option) (*CreatePaiPanRsp, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, req}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateBaziPaipan", varargs...)
	ret0, _ := ret[0].(*CreatePaiPanRsp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBaziPaipan indicates an expected call of CreateBaziPaipan.
func (mr *MockBaziPaipanClientProxyMockRecorder) CreateBaziPaipan(ctx, req interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, req}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBaziPaipan", reflect.TypeOf((*MockBaziPaipanClientProxy)(nil).CreateBaziPaipan), varargs...)
}

// RenderPaiPanImage mocks base method.
func (m *MockBaziPaipanClientProxy) RenderPaiPanImage(ctx context.Context, req *PaiPanRequest, opts ...client.Option) (*RenderPaiPanImageRsp, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, req}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "RenderPaiPanImage", varargs...)
	ret0, _ := ret[0].(*RenderPaiPanImageRsp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RenderPaiPanImage indicates an expected call of RenderPaiPanImage.
func (mr *MockBaziPaipanClientProxyMockRecorder) RenderPaiPanImage(ctx, req interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, req}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RenderPaiPanImage", reflect.TypeOf((*MockBaziPaipanClientProxy)(nil).RenderPaiPanImage), varargs...)
}
